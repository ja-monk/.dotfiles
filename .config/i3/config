#-----   [[ i3 config ]]   -----#
# NOTE: if keyboard layout changed, delete this file and re-run i3-config-wizard(1).

# set mod key & font
set $mod Mod4

# set font
font pango:JetBrains Mono 12

# ensure keyboard is GB
exec_always --no-startup-id setxkbmap gb

#-----   [[ monitor config ]]   -----#
# set monitor position
exec_always --no-startup-id xrandr --output DP-0 --mode 1920x1080 --pos 0x0 \
--output DP-2 --primary --mode 1920x1080 --pos 1920x0 \
--output HDMI-0 --off

# set background
# exec_always --no-startup-id sleep 2
exec_always --no-startup-id feh --bg-scale ~/Pictures/dark-sky.jpg

# set varibles for each monitor to use in config
set $left_mon DP-0
set $right_mon DP-2

# run picom composition manager on all monitors as daemon
exec --no-startup-id DISPLAY=":0" picom --experimental-backends -b

#-----   [[ workspace setup ]]   -----#
# Define names for workspaces which we use to configure key bindings
# these names can be changed here later, such as "1: Browser"
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"

# define workspaces for monitor 1
workspace $ws1 output $right_mon
workspace $ws2 output $right_mon
workspace $ws3 output $right_mon
workspace $ws4 output $right_mon
workspace $ws5 output $right_mon
workspace $ws6 output $right_mon
workspace $ws7 output $right_mon
workspace $ws8 output $right_mon
workspace $ws9 output $right_mon

# define workspaces for monitor 2
workspace $ws11 output $left_mon
workspace $ws12 output $left_mon
workspace $ws13 output $left_mon
workspace $ws14 output $left_mon
workspace $ws15 output $left_mon
workspace $ws16 output $left_mon
workspace $ws17 output $left_mon
workspace $ws18 output $left_mon
workspace $ws19 output $left_mon

# switch to workspace monitor 1
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9

# switch to workspace monitor 2 (Mod1 = ALT)
bindsym Mod1+1 workspace $ws11
bindsym Mod1+2 workspace $ws12
bindsym Mod1+3 workspace $ws13
bindsym Mod1+4 workspace $ws14
bindsym Mod1+5 workspace $ws15
bindsym Mod1+6 workspace $ws16
bindsym Mod1+7 workspace $ws17
bindsym Mod1+8 workspace $ws18
bindsym Mod1+9 workspace $ws19

# move focused container to workspace monitor 1 and focus on it again
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9

# move focused container to workspace monitor 2 (Mod1 = ALT) and focus on it again
bindsym Mod1+Shift+1 move container to workspace $ws11; workspace $ws11
bindsym Mod1+Shift+2 move container to workspace $ws12; workspace $ws12
bindsym Mod1+Shift+3 move container to workspace $ws13; workspace $ws13
bindsym Mod1+Shift+4 move container to workspace $ws14; workspace $ws14
bindsym Mod1+Shift+5 move container to workspace $ws15; workspace $ws15
bindsym Mod1+Shift+6 move container to workspace $ws16; workspace $ws16
bindsym Mod1+Shift+7 move container to workspace $ws17; workspace $ws17
bindsym Mod1+Shift+8 move container to workspace $ws18; workspace $ws18
bindsym Mod1+Shift+9 move container to workspace $ws19; workspace $ws19

#-----   [[ workspace usage ]]   -----#
# change focus with vim keys
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternative cursor keys change focus binding
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right

# change focus to next/previous workspace with tab
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# move focused window with vim keys
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternative cursor keys move window binding
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+n split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+s layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# kill focused window
bindsym $mod+q kill

#-----   [[ appearance ]]   -----#
# default boarder no title, 
default_border pixel 4
# include title for firefox private window and pad title due to rounded corners
for_window [title=".*Private Browsing.*"] border normal
for_window [title=".*Private Browsing.*"] title_format "  %title"

# gap config (outer gap added to inner gap)
gaps outer 0
gaps inner 15
smart_gaps on

#-----   [[ misc utils config ]]   -----#
# Start XDG autostart .desktop files using dex (see https://wiki.archlinux.org/index.php/XDG_Autostart)
exec --no-startup-id dex --autostart --environment i3

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

#-----   [[ misc behavior config ]]   -----#
# disable mouse warping (mouse moving to focused window)
mouse_warping none

# focus follows mouse setting, set to no but can still click to focus
focus_follows_mouse no

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# return to previous window when shortcut to current window is pressed again
workspace_auto_back_and_forth yes

# turn off screen timeout energy saver
exec --no-startup-id xset s off -dpms
exec --no-startup-id xset s noblank

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

#-----   [[ resize mode ]]   -----#
# resize mode keybinds (can also use the mouse)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        #bindsym Left resize shrink width 10 px or 10 ppt
        #bindsym Down resize grow height 10 px or 10 ppt
        #bindsym Up resize shrink height 10 px or 10 ppt
        #bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# enter resize mode
bindsym $mod+r mode "resize"

#-----   [[ status bar ]]   -----#
# adding /usr/sbin to status bar path so it can shutdown, access network tools, etc.
bar {
        font pango:JetBrains Mono 12
        tray_output primary
        status_command env PATH=$PATH:/usr/sbin /usr/bin/bumblebee-status \
	-m network sensors cpu memory pulseout datetime system \
	-p datetime.format="%d/%m/%y %H:%M" sensors.show_freq="false" memory.format="{percent:05.02f}%" system.suspend="systemctl suspend" \
	-t gruvbox-powerline
	#position top
}

#-----   [[ standard program keybinds ]]   -----#
# rofi shortcuts
bindsym $mod+d exec rofi -show run
bindsym $mod+g exec rofi -show window
bindsym $mod+apostrophe exec rofi -show ssh
# brightness controls for laptop, send SIGUSR1 to bar to instantly refresh
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5% && ps -ef | grep bumblebee | grep python | awk '{ print $2 }' | xargs kill -SIGUSR1
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%- && ps -ef | grep bumblebee | grep python | awk '{ print $2 }' | xargs kill -SIGUSR1
# start a terminal
bindsym $mod+Return exec --no-startup-id alacritty
# browser
bindsym $mod+w exec firefox
bindsym $mod+Shift+w exec firefox -private-window
# music
bindsym $mod+m exec firefox --new-window https://music.youtube.com/
# pulse audio control
bindsym $mod+p exec pavucontrol
# file manager
bindsym $mod+e exec pcmanfm
# system monitor / task manager
bindsym Control+Shift+Escape exec gnome-system-monitor
# custom screenshot snip script
bindsym $mod+Shift+s exec /home/james/bin/snip.sh &

